// Generated by dts-bundle v0.3.0
// Dependencies for this module:
//   ../src/definitions/eventemitter3/eventemitter3.d.ts

declare module 'cu-events' {
    /**
      * This Source Code Form is subject to the terms of the Mozilla Public
      * License, v. 2.0. If a copy of the MPL was not distributed with this
      * file, You can obtain one at http://mozilla.org/MPL/2.0/.
      */
    import EventEmitter = require('eventemitter3');
    import HandlesCharacter from '__cu-events/classes/HandlesCharacter';
    import HandlesEnemyTarget from '__cu-events/classes/HandlesEnemyTarget';
    import HandlesFriendlyTarget from '__cu-events/classes/HandlesFriendlyTarget';
    export default class Events {
        Character: HandlesCharacter;
        EnemyTarget: HandlesEnemyTarget;
        FriendlyTarget: HandlesFriendlyTarget;
        emitter: EventEmitter;
        constructor();
        on(topic: string, callback: (info: any) => void): void;
        off(topic: string, callback: (info: any) => void): void;
        addListener(topic: string, callback: (info: any) => void): void;
        removeListener(topic: string, callback: (info: any) => void): void;
    }
}

declare module '__cu-events/classes/HandlesCharacter' {
    export default class HandlesCharacter {
        name: string;
        action: any;
        constructor();
        start(): void;
    }
}

declare module '__cu-events/classes/HandlesEnemyTarget' {
    export default class HandlesEnemyTarget {
        name: string;
        action: any;
        constructor();
        start(): void;
    }
}

declare module '__cu-events/classes/HandlesFriendlyTarget' {
    export default class HandlesFriendlyTarget {
        name: string;
        action: any;
        constructor();
        start(): void;
    }
}

